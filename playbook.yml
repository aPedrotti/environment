- name: Preparing Workstation
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    - ansible_user: "andre"
    - docker_compose_version: "v2.7.0"
    - docker_machine_bash_completion_version: "v0.16.0"
    - docker_compose_completion_version: "1.26.2"
    - gotemplate_version: "v3.7.0"
    - hashicorp_repository_url: "https://apt.releases.hashicorp.com"
    - hashicorp_repository_key_url: '{{ hashicorp_repository_url }}/gpg'
    - kind_version: "v0.21"
    - kubectl_version: "v1.29.1"
    - slack_version: "4.36.140"
    - stern_version: "1.11.0"

  tasks:
    - block: # Disable IPv6
      - name: Disable IPv6 as default
        become: true
        lineinfile:
            path: /etc/sysctl.conf
            line: net.ipv6.conf.default.disable_ipv6=1
            state: present
      - name: Disable IPv6 configuration
        become: true
        lineinfile:
            path: /etc/sysctl.conf
            line: net.ipv6.conf.all.disable_ipv6=1
            state: present
      - name: Disable IPv6 startup
        become: true
        lineinfile:
            path: /etc/sysctl.conf
            line: net.ipv6.conf.lo.disable_ipv6=1
            state: present
      - name: Restart service
        become: true
        shell:
          cmd: "sysctl -p"
      rescue:
        - name: show failed task @ rescue
          ansible.builtin.debug:
            msg: "{{ ansible_failed_task }}"
        - name: show failed task's result @ rescue
          ansible.builtin.debug:
            msg: "{{ ansible_failed_result }}"
    
    - block: # Main Stuff
      - name: Upgrade Defaults
        become: true
        apt:
          upgrade: "yes"
          update_cache: "yes"
      - name: Installing Linux Apps
        become: true
        apt:
          name: '{{ item }}'
          install_recommends: 'yes'
          state: present
        loop:
          - apt-transport-https
          - bash-completion
          - build-essential 
          - ca-certificates
          - curl
          - dirmngr
          - file
          - gedit
          - git
          - gnupg
          - gnupg-agent
          - gpg
          - flameshot
          - fonts-hack
          - htop
          - linux-buildinfo-6.2.0-34-generic
          - linux-cloud-tools-6.2.0-34-generic
          - linux-image-6.2.0-34-generic
          - linux-headers-6.2.0-34-generic
          - linux-modules-6.2.0-34-generic
          - linux-modules-extra-6.2.0-34-generic
          - linux-hwe-6.2-headers-6.2.0-34
          - linux-hwe-6.2-tools-6.2.0-34
          - linux-hwe-6.2-cloud-tools-6.2.0-34
          - linux-tools-6.2.0-34-generic
          - kernelstub
          - keepassxc
          - krita
          - libarchive-tools
          - ipcalc
          - make
          - mlocate
          - ncdu
          - python3-pip
          - procps
          - software-properties-common
          - synaptic
          - tilix
          - timeshift
          - tree
          - vim
          - virtualbox
          - vlc
          - zsh
          - wget
        
      - name: Configuring Symlink for Python
        become: 'yes'
        file:
          src: /usr/bin/python3
          dest: /usr/bin/python
          state: link
      - name: Install Homebrew
        shell: 
          cmd: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    - block: ## Install Keys and Repos
      - name: Install MS Teams Key
        become: true
        apt_key:
          url: https://packages.microsoft.com/keys/microsoft.asc
          state: present
      - name: Add MS Teams Repository
        become: true
        apt_repository:
          repo: deb [arch=amd64] https://packages.microsoft.com/repos/ms-teams stable main
          state: present
          filename: ms-teams
      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
          state: present
          filename: vscode
      - name: Install Google Key
        become: true
        apt_key:
          url: https://dl.google.com/linux/linux_signing_key.pub
          state: present
      - name: Install Google Repository
        become: true
        apt_repository:
          repo: deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main
          state: present
          filename: google-chrome
      - name: Add Hashicorp apt key
        apt_key:
          url: '{{ hashicorp_repository_key_url }}'
          state: present
        become: true
        when: ansible_pkg_mgr == 'apt'
      - name: Add Hashicorp apt repo
        apt_repository:
          repo: deb {{ hashicorp_repository_url }} {{ ansible_distribution_release }} main
          state: present
        become: true
        when: ansible_pkg_mgr == 'apt'
      - name: Install Google Cloud SDK Key
        become: true
        apt_key:
          url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          state: present
      - name: Install Google Cloud SDK Repository
        become: true
        apt_repository:
          repo: deb [arch=amd64] https://packages.cloud.google.com/apt cloud-sdk main
          state: present
          filename: google-cloud-sdk
      - name: Install Docker Key
        become: true
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
          state: present
          filename: docker-ce
      - name: Install Brave Key
        become: true
        apt_key:
          url: https://brave-browser-apt-release.s3.brave.com/brave-core.asc
          state: present
      - name: Install Brave Repository
        become: true
        apt_repository:
          repo: deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main
          state: present
          filename: brave
      - name: Update Cache
        become: true
        apt:
          update_cache: 'yes'
    
    - block: # Install DevOps Main Packages
      - name: Installing AWS CLI via pip3
        become: true
        pip:
          name: awscli
          executable: pip3
      - name: Installing Google Chrome
        become: true
        apt:
          name: google-chrome-stable
      - name: Installing Google Cloud SDK
        become: true
        apt:
          name: google-cloud-sdk
          state: absent
      - name: Installing Hashicorp Terraform
        become: true
        apt:
          name: terraform
      - name: Installing Hashicorp Vault
        become: true
        apt:
          name: vault
      - name: Installing Hashicorp Vagrant
        become: true
        apt:
          name: vagrant
      - name: Installing Visual Studio Code
        become: true
        apt:
          name: code
      - name: Installing Visual Studio Code Extensions
        become: 'no'
        shell:
          cmd: code --install-extension '{{ item }}'
        loop:
          - amazonwebservices.aws-toolkit-vscode
          - bbenoist.vagrant
          - DavidAnson.vscode-markdownlint
          - eamodio.gitlens
          - GitLab.gitlab-workflow
          - golang.go
          - hashicorp.hcl
          - hashicorp.terraform
          - lunuan.kubernetes-templates
          - mhutchie.git-graph
          - ms-azuretools.vscode-docker
          - ms-ceintl.vscode-language-pack-pt-br
          - ms-kubernetes-tools.kind-vscode
          - ms-kubernetes-tools.vscode-kubernetes-tools
          - ms-python.debugpy
          - ms-python.isort
          - ms-python.python
          - ms-python.vscode-pylance
          - ms-vscode.makefile-tools
          - ms-vscode-remote.remote-wsl
          - ms-vscode-remote.remote-containers
          - njpwerner.autodocstring
          - oderwat.indent-rainbow
          - PKief.material-icon-theme
          - tumido.crd-snippets
          - rangav.vscode-thunder-client
          - redhat.ansible
          - redhat.vscode-commons
          - redhat.vscode-yaml
    
    - block: # Docker Stuff
        - name: Installing Docker
          become: true
          apt:
            name: "docker-ce"
            install_recommends: "yes"
            state: "present"
        - name: Adding existing user to group Docker
          become: 'yes'
          user:
            name: '{{ ansible_user }}'
            groups: docker
            append: 'yes'
        - name: Installing Docker-Compose
          become: true
          get_url:
            url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-linux-x86_64
            #remote_src: 'yes'
            dest: /usr/local/bin/docker-compose
            mode: 755
        - name: Installing Docker Machine Bash Completion
          become: true
          get_url:
            url: https://raw.githubusercontent.com/docker/machine/{{ docker_machine_bash_completion_version }}/contrib/completion/bash/docker-machine.bash
            dest: /etc/bash_completion.d/docker-machine
            #remote_src: 'yes'
        - name: Installing Docker-Compose Bash Completion
          become: true
          get_url:
            url: https://raw.githubusercontent.com/docker/compose/{{ docker_compose_completion_version }}/contrib/completion/bash/docker-compose
            dest: /etc/bash_completion.d/docker-compose
            #remote_src: 'yes'
        
    - block: # Kubernetes Stuffs 
        #- name: Installing Kubectl latest
        #  become: true
        #  shell:
        #    cmd: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        - name: Downloading Kubectx and Kubens
          become: true
          git:
            repo: https://github.com/ahmetb/kubectx
            dest: /opt/kube
        - name: Installing Kubectl {{ kubectl_version }}
          become: true
          ansible.builtin.get_url:
            url: "https://dl.k8s.io/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
            dest: /opt/kube/kubectl
        - name: Creating Symlink to kubectx and kubens
          become: true
          file:
            src: /opt/kube/{{ item }}
            dest: /usr/local/bin/{{ item }}
            state: link
          with_items:
            - kubectl
            - kubectx
            - kubens
        - name: Installing Kind {{ kind_version }}
          shell:
            cmd: curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.21.0/kind-linux-amd64
            #remote_src: 'yes'
        - name: Moving Kind
          become: true
          shell:
            cmd: mv kind /usr/local/bin/kind
        - name: Permission Kind
          become: true
          shell:
            cmd: chmod 770 /usr/local/bin/kind
        #- name: Installing Stern {{ stern_version }} # allows you to tail multiple pods on Kubernetes and multiple containers within the pod. Each result is color coded for quicker debugging.
        #  become: true
        #  get_url:
        #    url: https://github.com/wercker/stern/releases/download/{{ stern_version }}/stern_linux_amd64
        #    dest: /usr/local/bin/stern
        #    mode: 755
            #remote_src: 'yes'
        
    - block: # Communicators
        - name: Installing Slack
          become: true
          apt:
            deb: https://downloads.slack-edge.com/releases/linux/{{ slack_version }}/prod/x64/slack-desktop-{{ slack_version }}-amd64.deb
        - name: Installing Discord
          become: true
          apt:
            deb: https://discord.com/api/download?platform=linux&format=deb
    
    - block: # OH MY ZSH and Customizations
        - name: Verify if Oh-My-zsh is installed
          command: test -d /home/{{ ansible_user }}/.oh-my-zsh
          register: ohmyzsh
          ignore_errors: true
        - name: Installing Oh-My-zsh
          become: 'no'
          shell:
            cmd: curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash
            warn: false
          when: ohmyzsh.rc != 0
        - name: Changing Default Shell to ZSH
          become: 'yes'
          user:
            name: '{{ ansible_user }}'
            shell: /bin/zsh
          when: ohmyzsh.rc != 0
        - name: Configure Terminal Extension
          git:
            repo: https://github.com/romkatv/powerlevel10k.git
            dest: $HOME/.oh-my-zsh/custom/themes/powerlevel10k
          when: ohmyzsh.rc != 0
        - name: Configure Terminal Extension zsh-syntax-highlighting - It enables highlighting of commands whilst they are typed at a zsh prompt into an interactive terminal.
          git:
            repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
            dest: $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
          when: ohmyzsh.rc != 0
        - name: Configure Terminal Extension zsh-auto-suggestions 
          git:
            repo: https://github.com/zsh-users/zsh-autosuggestions
            dest: $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions
          when: ohmyzsh.rc != 0
        - name: Changing Default ZSH Theme to powerlevel10k
          lineinfile:
            path: /home/{{ ansible_user }}/.zshrc
            regexp: ^ZSH_THEME=
            line: ZSH_THEME="powerlevel10k/powerlevel10k"
          when: ohmyzsh.rc != 0
        - name: Creating ZSH Completion folder
          file:
            path: /home/{{ ansible_user }}/.oh-my-zsh/completions
            state: directory
            mode: 755
          when: ohmyzsh.rc != 0
        - name: Adding autoload to compinit
          lineinfile:
            path: /home/{{ ansible_user }}/.zshrc
            line: autoload -U compinit && compinit
            state: present
          when: ohmyzsh.rc != 0
        - name: Adding autoload to Stern
          lineinfile:
            path: /home/{{ ansible_user }}/.zshrc
            line: source <(stern --completion=zsh)
            state: present
          when: ohmyzsh.rc != 0
        - name: Configuring plugins for ZSH
          lineinfile:
            path: /home/{{ ansible_user }}/.zshrc
            regexp: ^plugins=
            line: plugins=(git docker docker-compose zsh-syntax-highlighting zsh-autosuggestions)
        - name: Creating ZSH Completion
          file:
            src: /opt/kube/completion/{{ item }}
            dest: /home/{{ ansible_user }}/.oh-my-zsh/completions/_{{ item }}
            state: link
          with_items:
            - _kubectx.zsh
            - _kubens.zsh

## Security

# Requirements
# kernel 
    - block:
      - name: Update kernel startup
        become: true
        shell:
          cmd: "kernelstub -v -k /boot/vmlinuz-6.2.0-34-generic -i /boot/initrd.img-6.2.0-34-generic"


# Cortex
    - block: # Cortex - Install
      - name: Cortex - Unpack
        become: true
        ansible.builtin.unarchive:
          src: /home/{{ ansible_user}}/Downloads/cortex.tar.gz
          dest: /home/{{ ansible_user}}/Downloads/
          remote_src: yes
      - name: Cortex - Create directory
        become: true
        ansible.builtin.file:
            path: "/etc/panw/"
            state: directory
            mode: "0755"
      - name: Cortex - copy configuration
        become: true
        ansible.builtin.copy:
          src: "/home/{{ ansible_user}}/Downloads/cortex.conf"
          dest: "/etc/panw/cortex.conf"
          mode: "0755" 
          remote_src: "yes"
      - name: Cortex - Install Packages
        become: true
        ansible.builtin.apt: 
          update_cache: "yes"
          install_recommends: 'yes'
          state: present
          deb: "/home/{{ ansible_user}}/Downloads/cortex-8.1.1.112729.deb"
    - block: # Cortex - Execute
      - name: Cortex - Execute Runtime
        become: true
        shell:
          cmd: "/opt/traps/bin/cytool runtime start all"
      - name: Cortex - Generate logs
        become: true
        shell:
          cmd: "/opt/traps/bin/cytool log collect"
    - block: # Cortex - Execute run
      - name: Cortex - Execute Run
        become: true
        ansible.builtin.shell:
          cmd: "/opt/traps/bin/cytool scan start"
      - name: Cortex - Check Scan
        become: true
        ansible.builtin.shell:
          cmd: "/opt/traps/bin/cytool scan query"

    


# SEP
    - block: #  Symantec - SEP
      - name: Installer permission
        become: true
        ansible.builtin.file:
          src: "/home/{{ ansible_user}}/Downloads/sep"
          mode: "u+x"
      - name: Installer permission
        become: true
        file:
            path: sep
            state: file
            mode: 755

# Global Protect


# Office Internet Certificate 

# OPTIONAL:

    - block: #  - PEEK - Lightweight Screen Recorder that can export as GIF
      - name: Adding Peek Repository 
        become: true
        apt_repository:
          repo: ppa:peek-developers/stable
      - name: Install Peek
        become: true
        apt:
          name: peek
    - block: #  - OBS-STUDIO - Screen Recorder and Casting Software 
      - name: Install obsproject Ubuntu Repo
        become: true
        apt_repository:
          repo: ppa:obsproject/obs-studio
      - name: Install obs Studio
        become: true
        apt:
          name: obs-studio
    - block: #  - Brave Browser - Secure web browser
      - name: Installing Brave Browser
        become: true
        apt:
          name: brave-browser
          state: absent
    - block: #  - Ulauncher - Application Launcher
      - name: Adding Repository
        become: true
        apt_repository:
          repo: ppa:agornostal/ulauncher
      - name: Install Ulauncher
        become: true
        apt:
          name: ulauncher
          state: absent

            #- block:
            #- name: 
