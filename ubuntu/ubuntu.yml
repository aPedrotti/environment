## PRE-REQS
# sudo apt update && sudo apt install ansible -y 
## APPLY CONFIG
# ansible-playbook ubuntu.yml --ask-become-pass
---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:

    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - apt-transport-https
          - bash-completion
          - ca-certificates
          - curl
          - git
          - gnupg
          - gnupg-agent
          - flameshot
          - fonts-hack
          - htop
          - keepassxc
          - krita
          - make
          - mlocate
          - ncdu
          - python3-pip
          - tilix
          - timeshift
          - tree
          - vim
          - virtualbox
          - zsh
          - wget

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        become: no
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0
      - name: Changing Default Shell to ZSH
        become: yes
        user: 
          name: '{{ ansible_user }}'
          shell: /bin/zsh
        when: ohmyzsh.rc != 0
      - name: Changing Default ZSH Theme to powerlevel10k
        lineinfile:
          path: /home/{{ ansible_user }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
        when: ohmyzsh.rc != 0
      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user }}/.oh-my-zsh/completions
          state: directory
          mode: 0755
        when: ohmyzsh.rc != 0
      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present
        when: ohmyzsh.rc != 0
      - name: Configure Terminal Extension
        git:
          repo: 'https://github.com/romkatv/powerlevel10k.git'
          dest: ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
        when: ohmyzsh.rc != 0
      - name: Configuring Symlink for Python
        become: yes
        file:
          src: "/usr/bin/python3"
          dest: "/usr/bin/python"
          state: link

    - name: Installing AWS CLI via pip3
      become: true
      pip:
        name: awscli
        executable: pip3
    - block:
      - name: Install MS Teams Key
        become: true
        apt_key:
          url: https://packages.microsoft.com/keys/microsoft.asc
          state: present
      - name: Add MS Teams Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/ms-teams stable main'
          state: present
          filename: ms-teams
      - name: Update Cache  
        become: true
        apt:
          update_cache: yes
      - name: Install MS Teams
        become: true
        apt:
          update_cache: yes
          name: teams
          state: present

    - block:
      - name: Install Google Key
        become: true
        apt_key: 
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present
      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome
      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable

    - block:
      - name: Installing Vagrant 2.2.18
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vagrant/2.2.18/vagrant_2.2.18_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing Terraform 1.0.4
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/1.0.4/terraform_1.0.4_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing Vault 1.8.1
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vault/1.8.1/vault_1.8.1_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing gomplate 3.7.0
        become: true
        get_url:    
          url: 'https://github.com/hairyhenderson/gomplate/releases/download/v3.7.0/gomplate_linux-amd64'
          dest: /usr/local/bin/gomplate
          mode: 755
          remote_src: yes

    - block:
      - name: Installing Stern 1.11.0
        become: true
        get_url:    
          url: 'https://github.com/wercker/stern/releases/download/1.11.0/stern_linux_amd64'
          dest: /usr/local/bin/stern
          mode: 755
          remote_src: yes

    - block:
      - name: Install Google Cloud SDK Key
        become: true
        apt_key:
          url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
          state: present
      - name: Install Google Cloud SDK Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.cloud.google.com/apt cloud-sdk main'
          state: present
          filename: google-cloud-sdk
      - name: Install Google Cloud SDK
        become: true
        apt:
          name: google-cloud-sdk

          
    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present
      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
          state: present
          filename: vscode
      - name: Install Visual Studio Code
        become: true
        apt:
          name: code
      - name: Install Virtual Studio Code Extensions
        become: no
        shell:
          cmd: code --install-extension '{{ item }}' 
        loop: 
          - ms-python.python
          - ms-toolsai.jupyter
          - ms-azuretools.vscode-docker
          - ms-vscode-remote.remote-containers
          - bbenoist.vagrant
          - hashicorp.terraform
          - njpwerner.autodocstring
          - mhutchie.git-graph
          - oderwat.indent-rainbow
          - redhat.vscode-yaml
          - ms-ceintl.vscode-language-pack-pt-br

    - block: 
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
      - name: Install Docker
        become: true
        apt:
          name: docker-ce
      - name: Adding existing user to group Docker
        become: yes
        user: 
          name: '{{ ansible_user }}'
          groups: docker 
          append: yes
      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/1.26.2/docker-compose-Linux-x86_64'
          dest: '/usr/local/bin/docker-compose'
          mode: 755
          remote_src: yes
      - name: Install Docker-Compose
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.0/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'
          remote_src: yes
      - name: Install Docker-Compose Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.26.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'
          remote_src: yes
      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'
        
    - block:
      - name: Installing Kubectl 1.16.0
        become: true
        shell:    
          cmd: 'curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"'
      - name: Move Kubectl 
        become: true
        shell:
          cmd: 'mv kubectl /usr/local/bin/kubectl'
      - name: Permission kubectl
        become: true
        shell:
          cmd: 'chmod 770 /usr/local/bin/kubectl'
      - name: Downloading Kubectx and Kubens 
        become: true
        git:
          repo: 'https://github.com/ahmetb/kubectx'
          dest: /opt/kubectx 
      - name: Creating Symlink to kubectx and kubens 
        become: true
        file:
          src: '/opt/kubectx/{{ item }}'
          dest: '/usr/local/bin/{{ item }}'
          state: link
        with_items:
          - kubectx
          - kubens  
      - name: Creating ZSH Completion  
        file:
          src: '/opt/kubectx/completion/{{ item }}'
          dest: '/home/{{ ansible_user }}/.oh-my-zsh/completions/_{{ item }}'
          state: link
        with_items:
          - kubectx.zsh
          - kubens.zsh 
          
    - block:
      - name: Adding Longsleep/Golang Backports Repository
        become: true
        apt_repository:
          repo: 'ppa:longsleep/golang-backports'
      - name: Install Golang 
        become: true
        apt:
          name: golang-go
    
    - block:
      - name: Installing Discord
        apt: 
          deb: https://discord.com/api/download?platform=linux&format=deb
        
# OPTIONAL:
#  - PEEK - Lightweight Screen Recorder that can export as GIF
#  - OBS-STUDIO - Screen Recorder and Casting Software 
#  - Brave Browser - Secure web browser
#  - Ulauncher - Application Launcher

    - block:
      - name: Adding Peek Repository
        become: true
        apt_repository:
          repo: 'ppa:peek-developers/stable'
      - name: Install Peek
        become: true
        apt:
          name: peek

    - block:
      - name: Install obsproject Ubuntu Repo
        become: true
        apt_repository:
          repo: 'ppa:obsproject/obs-studio'
      - name: Install obs Studio
        become: true
        apt:
          name: obs-studio

    - block: 
      - name: Install Brave Key
        become: true
        apt_key:
          url: 'https://brave-browser-apt-release.s3.brave.com/brave-core.asc'
          state: present
      - name: Install Brave Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
          state: present
          filename: brave
      - name: Install Brave Browser
        become: true
        apt:
          name: brave-browser

    - block:
      - name: Adding Repository
        become: true
        apt_repository:
          repo: 'ppa:agornostal/ulauncher'
      - name: Install Ulauncher
        become: true
        apt:
          name: ulauncher
